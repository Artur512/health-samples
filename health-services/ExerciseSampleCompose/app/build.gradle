/*
 * Copyright 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  id 'dagger.hilt.android.plugin'
  id 'kotlin-kapt'
}

android {
  compileSdk 33

  defaultConfig {
    applicationId "com.example.exercisecompose"
    minSdk 30
    targetSdk 30
    versionCode 1
    versionName "1.0"
  }

  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      signingConfig signingConfigs.debug
      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = "1.8"
  }
  buildFeatures {
    compose true
  }
  composeOptions {
    kotlinCompilerExtensionVersion libs.versions.compose.get()
  }
  packagingOptions {
    pickFirst 'data.proto'
    resources {
      excludes += "/META-INF/{AL2.0,LGPL2.1}"

    }
  }
}

dependencies {
  // General compose dependencies
  implementation libs.androidx.activity.compose
  implementation libs.compose.ui.tooling.preview

  // Compose for Wear OS Dependencies
  implementation libs.wear.compose.material

  // Foundation is additive, so you can use the mobile version in your Wear OS app.
  implementation libs.wear.compose.foundation

  implementation 'com.google.guava:guava:30.1.1-android'
  implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"

  //Wear OS Compose Navigation
  implementation "androidx.wear.compose:compose-navigation:1.2.0-alpha02"

  //Wear Health Services
  implementation "androidx.health:health-services-client:1.0.0-beta02"

  // To build applications that can read or write user's health and fitness records.
  implementation "androidx.health.connect:connect-client:1.0.0-alpha09"

  // Lifecycle components
  implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
  implementation "androidx.lifecycle:lifecycle-common-java8:2.5.1"
  implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
  implementation "androidx.lifecycle:lifecycle-service:2.5.1"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.0-alpha04"
  implementation 'androidx.compose.material:material-icons-core:1.4.0-alpha04'
  implementation 'androidx.compose.material:material-icons-extended:1.3.1'
  implementation 'androidx.compose.runtime:runtime-livedata:1.4.0-alpha04'
  implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha04"
  implementation "androidx.wear:wear:1.2.0"

  // Ongoing Activity
  implementation "androidx.wear:wear-ongoing:1.0.0"

  // Hilt
  implementation "com.google.dagger:hilt-android:2.43.2"
  implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
  kapt "com.google.dagger:hilt-android-compiler:2.43.2"
  implementation "androidx.compose.runtime:runtime:1.3.3"
  implementation "androidx.navigation:navigation-compose:2.5.3"


  // Testing
  testImplementation libs.junit
  androidTestImplementation libs.test.ext.junit
  androidTestImplementation libs.test.espresso.core
  androidTestImplementation libs.compose.ui.test.junit4
  debugImplementation libs.compose.ui.tooling
}
